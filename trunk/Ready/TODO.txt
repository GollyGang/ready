before 0.2 release:
- bug: Ready shouldn't crash if OpenCL isn't available and a file is loaded
- bug: occasional crash on Linux when docking panes
- populate a pattern library with some basics, including descriptions and initial-pattern-generators: Gray-Scott (different possibilities in 1D 2D and 3D), Turing spots, Meinhardt stripes, Schlogl
- control over size of world, running speed (timesteps_per_render)
- finish documenting stuff in Help/*.html (search for "!!!")

Andrew's tasks for 0.2:
- finish implementing keyboard shortcuts
- implement File > Add My Patterns... (or Set Pattern Folder... if that fails)
- allow user to change font size in Help pane (add + and - buttons?)
- fix cosmetic glitches in Rule Pane (remove focus ring, remember split pos, increase row ht?)
- fix bug: tool tips not appearing (Mac app only?)
- use better (big) toolbar icons in Mac app
- make About box a modal dialog using Help/about.html
- do any other "AKT TODO" tasks

before 0.x release:
- save out scene (e.g. OBJ) for external render (although paraview can load vti's)

before 1.0 release:
- lots of patterns in library (primary UI for beginners is a list of examples to click)
- bug: allow user to change OpenCL platform and device while a pattern is running
- copy/paste (2d only) (paste modes: add, overwrite)
- allow user to paint, erase, even while running (2D only)
- control over render pipeline: contouring level, color map, slice direction/height etc.
- control over boundary conditions: wrap-around or constant value
- save out videos
- SSE for non-OpenCL implementations (will assume all target cpus support SSE)

future ideas:
- parameter map(s) in a separate window, to allow user to explore parameters 
- full control over scene graph, e.g. nodes+connections interface
- different topologies: e.g. arbitrary 2d mesh embedded in 3d: zebra, etc.
- parameters driven by an input scene (for writhing logos, etc.)
- multi-stage, multi-scale RD (McCabe, Kytta, Woitzel)
- radiosity rendering for better visualization of tangled structures (embed a raytracer)
- STL output, email file to shapeways for printing
- discrete RD (simulation of individual chemicals, to compare with differential equations)
- display the evolution of a 1D pattern as a 2D image, with time as the second axis, as here:
  http://www.stephenwolfram.com/publications/recent/specialfunctions/images/Slide028_917x754.gif
- allow non-OpenCL implementations to load all files, by parsing formula
- integer systems (including GoL)
