before 0.2 release:
- bug: Ready shouldn't crash if OpenCL isn't available and a file is loaded
- populate a pattern library (primary UI for beginners is a list of examples to click)
- control over size of world, running speed
- allow non-OpenCL implementations to load some files, using <rule inbuilt="..." >

Andrew's tasks for 0.2 (peripheral UI stuff so Tim & Robert can concentrate on
the core RD stuff):
- tidy up menus (eg. move/rename some items)
- add Edit menu with std items
- replace wxConfig stuff with Golly-like prefs handling
- implement File > Open Recent submenu
- implement ctrl/right-click to edit file in patterns pane
- patterns pane should show supplied files and user files (latter via File > Add My Patterns?)
- add a toolbar with buttons for commonly-used functions (run/stop, step, reset, etc)
- toolbar also has slider for changing active chemical (no need for menu item?)
- add Help folder and populate with .html files (open from Help menu)

before 0.x release:
- file format should support random patches on top of the image (a constant value image compresses to almost nothing)
- save out scene (e.g. OBJ) for external render (although paraview can load vti's)

before 1.0 release:
- bug: allow user to change OpenCL platform and device while a pattern is running
- copy/paste (2d only) (paste modes: add, overwrite)
- allow user to paint, erase, even while running (2D only)
- control over render pipeline: contouring level, color map, slice direction/height etc.
- control over boundary conditions: wrap-around or constant value
- save out videos
- SSE for non-OpenCL implementations (will assume all target cpus support SSE)

future ideas:
- parameter map(s) in a separate window, to allow user to explore parameters 
- full control over scene graph, e.g. nodes+connections interface
- different topologies: e.g. arbitrary 2d mesh embedded in 3d: zebra, etc.
- parameters driven by an input scene (for writhing logos, etc.)
- multi-stage, multi-scale RD (McCabe, Kytta, Woitzel)
- radiosity rendering for better visualization of tangled structures (embed a raytracer)
- STL output, email file to shapeways for printing
- discrete RD (simulation of individual chemicals, to compare with differential equations)
- display the evolution of a 1D pattern as a 2D image, with time as the second axis, as here:
  http://www.stephenwolfram.com/publications/recent/specialfunctions/images/Slide028_917x754.gif
- allow non-OpenCL implementations to load all files, by parsing formula
