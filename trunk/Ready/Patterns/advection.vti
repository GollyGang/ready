<?xml version="1.0"?>
<VTKFile type="ImageData" version="0.1" byte_order="LittleEndian" compressor="vtkZLibDataCompressor">

    <RD format_version="4">

    <description>
      The &lt;a href=&quot;http://en.wikipedia.org/wiki/Advection#The_advection_equation&quot;&gt;advection equation&lt;/a&gt; 
      in a constant velocity field, given by:
      
      da/dt = -da/dx
      
      The rate of change is the negative x gradient. The result is that patterns move to the right without changing shape, as
      if carried by some bulk flow or &lt;i&gt;advection&lt;/i&gt;.
      
      (After a while distortions and instabilities appear because we are using only simple numerical methods.)
    </description>

    <rule name="advection" type="kernel" neighborhood_type="vertex" neighborhood_range="1" neighborhood_weight="laplacian">
    <kernel number_of_chemicals="1" block_size_x="1" block_size_y="1" block_size_z="1">
__kernel void rd_compute(__global float *a_in,__global float *a_out)
{
    const int index_x = get_global_id(0);
    const int index_y = get_global_id(1);
    const int index_z = get_global_id(2);
    const int X = get_global_size(0);
    const int Y = get_global_size(1);
    const int Z = get_global_size(2);
    const int index_here = X*(Y*index_z + index_y) + index_x;

    const int xm1 = ((index_x-1+X) &amp; (X-1)); // wrap (assumes X is a power of 2)
    const int xp1 = ((index_x+1) &amp; (X-1));
    const int index_e =  X*(Y*index_z + index_y) + xp1;
    const int index_w =  X*(Y*index_z + index_y) + xm1;
    float a = a_in[index_here];
    float a_e = a_in[index_e];
    float a_w = a_in[index_w];

    float h = 0.1f; // grid spacing
    float timestep = 0.0001f;
    float x_gradient_a = ( a_e - a_w ) / ( 2.0 * h );
    float delta_a = -x_gradient_a;
    a_out[index_here] = a + timestep * delta_a;
}
    </kernel>
      
    </rule>
    
    <initial_pattern_generator apply_when_loading="true">
    
      <overlay chemical="a">
        <overwrite />
        <gaussian height="1" sigma="0.05">
          <point3D x="0.5" y="0.5" z="0.5" />
        </gaussian>
        <everywhere />
      </overlay>
    </initial_pattern_generator>

    <render_settings>
      <timesteps_per_render value="1024" />
      <show_color_scale value="false" />
      <vertical_scale_1D value="50" />
    </render_settings>
    
  </RD>

  <ImageData WholeExtent="0 255 0 0 0 0" Origin="0 0 0" Spacing="1 1 1">
  <Piece Extent="0 255 0 0 0 0">
    <PointData>
      <DataArray type="Float32" Name="a" format="binary" RangeMin="0" RangeMax="0">
        AQAAAACAAAAABAAAEQAAAA==eJxjYBgFo2AUjFQAAAQAAAE=
      </DataArray>
    </PointData>
    <CellData>
    </CellData>
  </Piece>
  </ImageData>
</VTKFile>
