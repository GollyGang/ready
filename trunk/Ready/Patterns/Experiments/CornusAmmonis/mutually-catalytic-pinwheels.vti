<?xml version="1.0"?>
<VTKFile type="ImageData" version="0.1" byte_order="LittleEndian" compressor="vtkZLibDataCompressor">
  <RD format_version="4">
    <description>
      Mutually-Catalytic Pinwheels, based on Tim Hutton&apos;s Mutually-Catalytic Spots. Small spots (reagents c and d) move perpendicular to the gradient of large spots (reagents a and b). The direction of rotation reverses at points with a = 0.5 creating counter-rotating rings.
    </description>
    <rule name="coupled Gray-Scott" type="formula" wrap="0" neighborhood_type="vertex" neighborhood_range="1" neighborhood_weight="laplacian">
      <param name="timestep">
        0.06
      </param>
      <param name="diff_ab">
        2
      </param>
      <param name="diff_cd">
        0.041
      </param>
      <param name="k1">
        0.0648
      </param>
      <param name="F1">
        0.03
      </param>
      <param name="k2">
        0.08
      </param>
      <param name="F2">
        0.035
      </param>
      <param name="b_feed">
        0.01
      </param>
      <param name="d_feed">
        0.016
      </param>
      <param name="dps1">
        -0.0005
      </param>
      <param name="dps2">
        -0.4
      </param>
      <formula number_of_chemicals="5">
                float4 uax = (float4)(
(-(a_nw.w + a_sw.w) + (a_n.y   + a_s.y) - 2.0 * a_w.w + 2.0 * a.y  ),
(-(a_n.x  + a_s.x)  + (a_n.z   + a_s.z) - 2.0 * a.x   + 2.0 * a.z  ),
(-(a_n.y  + a_s.y)  + (a_n.w   + a_s.w) - 2.0 * a.y   + 2.0 * a.w  ),
(-(a_n.z  + a_s.z)  + (a_ne.x + a_se.x) - 2.0 * a.z   + 2.0 * a_e.x));


float4 uay = (float4)(
((a_nw.w + a_n.y ) - (a_sw.w +  a_s.y) - 2.0 * a_s.x + 2.0 * a_n.x),
((a_n.x  + a_n.z ) - (a_s.x  +  a_s.z) - 2.0 * a_s.y + 2.0 * a_n.y),
((a_n.y  + a_n.w ) - (a_s.y  +  a_s.w) - 2.0 * a_s.z + 2.0 * a_n.z),
((a_n.z  + a_ne.x) - (a_s.z  + a_se.x) - 2.0 * a_s.w + 2.0 * a_n.w));


float4 ubx = (float4)(
(-(b_nw.w + b_sw.w) + (b_n.y   + b_s.y) - 2.0 * b_w.w + 2.0 * b.y  ),
(-(b_n.x  + b_s.x)  + (b_n.z   + b_s.z) - 2.0 * b.x   + 2.0 * b.z  ),
(-(b_n.y  + b_s.y)  + (b_n.w   + b_s.w) - 2.0 * b.y   + 2.0 * b.w  ),
(-(b_n.z  + b_s.z)  + (b_ne.x + b_se.x) - 2.0 * b.z   + 2.0 * b_e.x));


float4 uby = (float4)(
((b_nw.w + b_n.y ) - (b_sw.w +  b_s.y) - 2.0 * b_s.x + 2.0 * b_n.x),
((b_n.x  + b_n.z ) - (b_s.x  +  b_s.z) - 2.0 * b_s.y + 2.0 * b_n.y),
((b_n.y  + b_n.w ) - (b_s.y  +  b_s.w) - 2.0 * b_s.z + 2.0 * b_n.z),
((b_n.z  + b_ne.x) - (b_s.z  + b_se.x) - 2.0 * b_s.w + 2.0 * b_n.w));


float4 ucx = (float4)(
(-(c_nw.w + c_sw.w) + (c_n.y   + c_s.y) - 2.0 * c_w.w + 2.0 * c.y  ),
(-(c_n.x  + c_s.x)  + (c_n.z   + c_s.z) - 2.0 * c.x   + 2.0 * c.z  ),
(-(c_n.y  + c_s.y)  + (c_n.w   + c_s.w) - 2.0 * c.y   + 2.0 * c.w  ),
(-(c_n.z  + c_s.z)  + (c_ne.x + c_se.x) - 2.0 * c.z   + 2.0 * c_e.x));


float4 ucy = (float4)(
((c_nw.w + c_n.y ) - (c_sw.w +  c_s.y) - 2.0 * c_s.x + 2.0 * c_n.x),
((c_n.x  + c_n.z ) - (c_s.x  +  c_s.z) - 2.0 * c_s.y + 2.0 * c_n.y),
((c_n.y  + c_n.w ) - (c_s.y  +  c_s.w) - 2.0 * c_s.z + 2.0 * c_n.z),
((c_n.z  + c_ne.x) - (c_s.z  + c_se.x) - 2.0 * c_s.w + 2.0 * c_n.w));




float4 udx = (float4)(
(-(d_nw.w + d_sw.w) + (d_n.y   + d_s.y) - 2.0 * d_w.w + 2.0 * d.y  ),
(-(d_n.x  + d_s.x)  + (d_n.z   + d_s.z) - 2.0 * d.x   + 2.0 * d.z  ),
(-(d_n.y  + d_s.y)  + (d_n.w   + d_s.w) - 2.0 * d.y   + 2.0 * d.w  ),
(-(d_n.z  + d_s.z)  + (d_ne.x + d_se.x) - 2.0 * d.z   + 2.0 * d_e.x));


float4 udy = (float4)(
((d_nw.w + d_n.y ) - (d_sw.w +  d_s.y) - 2.0 * d_s.x + 2.0 * d_n.x),
((d_n.x  + d_n.z ) - (d_s.x  +  d_s.z) - 2.0 * d_s.y + 2.0 * d_n.y),
((d_n.y  + d_n.w ) - (d_s.y  +  d_s.w) - 2.0 * d_s.z + 2.0 * d_n.z),
((d_n.z  + d_ne.x) - (d_s.z  + d_se.x) - 2.0 * d_s.w + 2.0 * d_n.w));




float4 dp1 = ucx * udx + ucy * udy;
float4 dp2 = ubx * ucy - uby * ucx;




delta_a = 2.0f * diff_ab * laplacian_a - a*b*b + F1*(1.0f-a);
delta_b = diff_ab * laplacian_b + a*b*b - (F1+k1-d*b_feed)*b;
delta_c = (a - 0.5) * dps2 * dp2 + 2.0f * diff_cd * laplacian_c - c*d*d + F2*(1.0f-c);
delta_d = dps1 * dp1 + diff_cd * laplacian_d + c*d*d - (F2+k2-step(0.15f,b)*d_feed)*d;
e = 2.0f*b + d*2.0f;
      </formula>
      
    </rule>
    <initial_pattern_generator apply_when_loading="true">
      <overlay chemical="a">
        <overwrite>
          
        </overwrite>
        <constant value="1">
          
        </constant>
        <everywhere>
          
        </everywhere>
        
      </overlay>
      <overlay chemical="b">
        <overwrite>
          
        </overwrite>
        <white_noise low="0.4" high="0.6">
          
        </white_noise>
        <circle radius="0.03">
          <point3D x="0.2" y="0.2" z="0.6">
            
          </point3D>
          
        </circle>
        <circle radius="0.03">
          <point3D x="0.5" y="0.3" z="0.6">
            
          </point3D>
          
        </circle>
        <circle radius="0.03">
          <point3D x="0.7" y="0.5" z="0.6">
            
          </point3D>
          
        </circle>
        
      </overlay>
      <overlay chemical="a">
        <subtract>
          
        </subtract>
        <constant value="0.5">
          
        </constant>
        <circle radius="0.07">
          <point3D x="0.2" y="0.2" z="0.6">
            
          </point3D>
          
        </circle>
        <circle radius="0.07">
          <point3D x="0.5" y="0.3" z="0.6">
            
          </point3D>
          
        </circle>
        <circle radius="0.07">
          <point3D x="0.7" y="0.5" z="0.6">
            
          </point3D>
          
        </circle>
        
      </overlay>
      <overlay chemical="c">
        <overwrite>
          
        </overwrite>
        <constant value="1">
          
        </constant>
        <everywhere>
          
        </everywhere>
        
      </overlay>
      <overlay chemical="d">
        <overwrite>
          
        </overwrite>
        <white_noise low="0.4" high="0.6">
          
        </white_noise>
        <circle radius="0.01">
          <point3D x="0.495" y="0.3" z="0.6">
            
          </point3D>
          
        </circle>
        
      </overlay>
      
    </initial_pattern_generator>
    <render_settings>
      <surface_color r="1" g="1" b="1">
        
      </surface_color>
      <color_low r="0" g="0" b="1">
        
      </color_low>
      <color_high r="1" g="0" b="0">
        
      </color_high>
      <show_color_scale value="true">
        
      </show_color_scale>
      <show_multiple_chemicals value="false">
        
      </show_multiple_chemicals>
      <active_chemical value="e">
        
      </active_chemical>
      <low value="0">
        
      </low>
      <high value="1">
        
      </high>
      <vertical_scale_1D value="30">
        
      </vertical_scale_1D>
      <vertical_scale_2D value="15">
        
      </vertical_scale_2D>
      <contour_level value="0.25">
        
      </contour_level>
      <use_wireframe value="false">
        
      </use_wireframe>
      <show_cell_edges value="false">
        
      </show_cell_edges>
      <show_bounding_box value="true">
        
      </show_bounding_box>
      <slice_3D value="true">
        
      </slice_3D>
      <slice_3D_axis value="z">
        
      </slice_3D_axis>
      <slice_3D_position value="0.5">
        
      </slice_3D_position>
      <show_displacement_mapped_surface value="false">
        
      </show_displacement_mapped_surface>
      <color_displacement_mapped_surface value="true">
        
      </color_displacement_mapped_surface>
      <use_image_interpolation value="true">
        
      </use_image_interpolation>
      <timesteps_per_render value="256">
        
      </timesteps_per_render>
      <show_phase_plot value="false">
        
      </show_phase_plot>
      <phase_plot_x_axis value="a">
        
      </phase_plot_x_axis>
      <phase_plot_y_axis value="b">
        
      </phase_plot_y_axis>
      <phase_plot_z_axis value="c">
        
      </phase_plot_z_axis>
      
    </render_settings>
    
  </RD>
  <ImageData WholeExtent="0 255 0 255 0 0" Origin="0 0 0" Spacing="1 1 1">
  <Piece Extent="0 255 0 255 0 0">
    <PointData>
      <DataArray type="Float32" Name="a" format="binary" RangeMin="0" RangeMax="0">
        CAAAAACAAAAAAAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAAAA=eJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAF4nO3BAQEAAACAkP6v7ggKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAABeJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAF4nO3BAQEAAACAkP6v7ggKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAABeJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAE=
      </DataArray>
      <DataArray type="Float32" Name="b" format="binary" RangeMin="0" RangeMax="0">
        CAAAAACAAAAAAAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAAAA=eJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAF4nO3BAQEAAACAkP6v7ggKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAABeJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAF4nO3BAQEAAACAkP6v7ggKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAABeJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAE=
      </DataArray>
      <DataArray type="Float32" Name="c" format="binary" RangeMin="0" RangeMax="0">
        CAAAAACAAAAAAAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAAAA=eJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAF4nO3BAQEAAACAkP6v7ggKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAABeJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAF4nO3BAQEAAACAkP6v7ggKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAABeJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAE=
      </DataArray>
      <DataArray type="Float32" Name="d" format="binary" RangeMin="0" RangeMax="0">
        CAAAAACAAAAAAAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAAAA=eJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAF4nO3BAQEAAACAkP6v7ggKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAABeJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAF4nO3BAQEAAACAkP6v7ggKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAABeJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAE=
      </DataArray>
      <DataArray type="Float32" Name="e" format="binary" RangeMin="0" RangeMax="0">
        CAAAAACAAAAAAAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAAAA=eJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAF4nO3BAQEAAACAkP6v7ggKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAABeJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAF4nO3BAQEAAACAkP6v7ggKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiAAAABeJztwQEBAAAAgJD+r+4ICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYgAAAAXic7cEBAQAAAICQ/q/uCAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGIAAAAE=
      </DataArray>
    </PointData>
    <CellData>
    </CellData>
  </Piece>
  </ImageData>
</VTKFile>
